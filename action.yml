name: 'Firebolt PR checks'
description: 'Verify PR formatting'
inputs:
  github-key:
    description: 'Github token'
    required: true
runs:
  using: "composite"
  steps:
    - name: Check title name convention
      uses: jef/conventional-commits-pr-action@v1.2.0
      with:
        token: ${{ inputs.github-key }}

    - name: Check PR created by internal user
      id: check-permissions
      env:
        GITHUB_TOKEN: ${{ inputs.github-key }}
      run: |
        PR_AUTHOR=${{ github.event.pull_request.user.login }}
        REPO_OWNER=${{ github.repository_owner }}
        REPO_NAME=$(basename ${{ github.repository }})
        
        # Call GitHub API to get permissions
        RESPONSE=$(curl -s \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/collaborators/$PR_AUTHOR/permission")

        PERMISSION=$(echo $RESPONSE | jq -r '.permission')

        if [[ "$PERMISSION" == "write" || "$PERMISSION" == "admin" ]]; then
          echo "internal=true" >> $GITHUB_OUTPUT
        else
          echo "internal=false" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Check PR title
      uses: actions/github-script@v4
      if: steps.check-permissions.outputs.internal == 'true'
      with:
        github-token: ${{ inputs.github-key }}
        script: |
          const payload = context.payload
          const prTitle = payload.pull_request.title
          // The pattern for JIRA ticket format
          const jiraPattern = /([A-Z]+-\d+|NoTicket)/g
          if (!jiraPattern.test(prTitle)) {
            core.setFailed('PR title does not match JIRA ticket format! Add FIR-XXXX or NoTicket to the PR title.')
          } else {
            console.log('PR title format is correct.')
          }
